export const JOURNEY_TYPE = {
  journeyType: {
    componentType: 'dropdown',
    options: [],
    selectedItem: {
      text: 'One way',
      value: 'ONE_WAY',
    },
    hideValue: true,
    dynamicPlaceholder: true,
    required: true,
    requiredText: '*',
    placeholderText: 'Journey type',
    isError: false,
    errorMessage: 'Please select journey type',
  },
};

export const CORPORATE_DETAILS = {
  companyName: {
    componentType: 'autoSuggest',
    options: [],
    label: 'Search company name',
    value: '',
    disabled: false,
    isError: false,
    id: 'companyName',
    errorMessage: 'Please select company name',
    required: true,
    selectedItem: { id: '', companyName: '' },
  },
  relationshipManagerName: {
    userId: '',
    componentType: 'input',
    value: '',
    label: 'Relationship manager name',
    isError: false,
    disabled: true,
    required: true,
    errorMessage: 'Please enter relationship manager name',
  },
  relationshipManagerPhone: {
    componentType: 'input',
    value: '',
    disabled: true,
    label: 'Relationship manager phone ',
    errorMessage: 'Please enter relationship manager phone',
    isError: false,
  },
  relationshipManagerEmail: {
    componentType: 'input',
    value: '',
    label: 'Relationship manager email',
    isError: false,
    disabled: true,
    errorMessage: 'Please enter relationship manager email',
  },
  gstEntityName: {
    componentType: 'gstDropdown',
    disabled: true,
    options: [{}],
    selectedItem: {},
    dynamicPlaceholder: true,
    required: true,
    requiredText: '*',
    placeholderText: 'GST entity name',
    isError: false,
    errorMessage: 'Please enter GST entity name',
  },
  gSTNumber: {
    componentType: 'input',
    value: '',
    label: 'GSTIN',
    isError: false,
    disabled: true,
    errorMessage: 'Please enter GSTIN',
  },
  gSTCompanyName: {
    componentType: 'input',
    value: '',
    label: 'GST company name',
    isError: false,
    disabled: true,
    errorMessage: 'Please enter GST company name',
  },
  gSTCompanyAddress: {
    componentType: 'input',
    value: '',
    label: 'GST address',
    isError: false,
    disabled: true,
    errorMessage: 'Please enter GST address',
  },
  gSTCompanyPinCode: {
    componentType: 'input',
    value: '',
    label: 'GST pincode',
    isError: false,
    disabled: true,
    errorMessage: 'Please enter GST pincode',
  },
};

export const TRIP_MAPPING = {
  tripId: {
    id: 'tripId',
    isError: false,
    componentType: 'input',
    label: 'Trip ID',
    disabled: true,
    value: '',
    errorMessage: 'Please enter a valid trip ID',
    type: 'text',
  },
};

export const TRIP_MAPPING_INTL = {
  tripId: {
    id: 'tripId',
    isError: false,
    componentType: 'input',
    label: 'Trip ID',
    disabled: true,
    value: '',
    errorMessage: 'Please enter a valid trip ID',
    type: 'text',
  },
  subTripId: {
    key: 'subTripID',
    componentType: 'dropdown',
    options: [{}],
    selectedItem: {},
    hideValue: true,
    dynamicPlaceholder: true,
    required: false,
    requiredText: '*',
    placeholderText: 'Select sub-trip ID',
    isError: false,
    errorMessage: 'Please enter sub-trip ID',
    disabled: true,
    id: 'subTripId',
    selectKey: 'value',
    textKey: 'text',
  },
};

export const BOOKING_DETAILS = {
  bookingId: {
    componentType: 'input',
    value: '',
    type: 'text',
    placeholder: 'Booking Id',
    dynamicPlaceholder: true,
    isError: false,
    required: true,
    requiredText: '*',
    disabled: true,
    isVisible: ['modify', 'view', 'edit'],
  },
  bookingStatus: {
    componentType: 'input',
    value: '',
    type: 'text',
    placeholder: 'Booking Status',
    dynamicPlaceholder: true,
    isError: false,
    required: true,
    requiredText: '*',
    disabled: true,
    isVisible: ['modify', 'view', 'edit'],
  },
  origin: {
    componentType: 'autoSuggest-citySearch',
    inputProps: {
      placeholder: 'Departure city or airport',
      dynamicPlaceholder: true,
      required: true,
      errorMessage: 'Please enter departure city or airport',
      id: 'origin',
      requiredText: '*',
      isError: false,
    },
    selectedItem: {},
    options: [],
    itemTextKey: 'text',
    itemValueKey: 'value',
    key: 'origin',
  },
  destination: {
    componentType: 'autoSuggest-citySearch',
    inputProps: {
      placeholder: 'Arrival city or airport',
      dynamicPlaceholder: true,
      required: true,
      errorMessage: 'Please enter arrival city or airport',
      id: 'destination',
      requiredText: '*',
      isError: false,
    },
    selectedItem: {},
    options: [],
    itemTextKey: 'text',
    itemValueKey: 'value',
    key: 'destination',
  },
  depDate: {
    componentType: 'dateSelection',
    id: 'depDate',
    name: 'depDate',
    value: '',
    isError: false,
    requiredText: '*',
    required: true,
    errorMessage: 'Please select departure Date',
    dynamicPlaceholder: true,
    placeholder: 'Departure Date',
  },

  noOfTravellers: {
    componentType: 'numberInput',
    value: 1,
    placeholder: 'Guest count ',
    required: true,
    dynamicPlaceholder: true,
    requiredText: '*',
    errorMessage: 'Please enter guest count',
    isError: false,
  },
};

export const INTL_BOOKING_DETAILS = {
  pnr: {
    componentType: 'input',
    value: '',
    placeholder: 'PNR number',
    required: true,
    dynamicPlaceholder: true,
    requiredText: '*',
    errorMessage: 'Please enter PNR number',
    isError: false,
    flightIntl: true,
  },
  ticketingSource: {
    componentType: 'dropdown',
    options: [],
    selectedItem: {},
    hideValue: true,
    dynamicPlaceholder: true,
    required: true,
    requiredText: '*',
    placeholderText: 'Ticketing sources',
    isError: false,
    errorMessage: 'Please select ticketing sources',
    flightIntl: true,
  },
  class: {
    componentType: 'dropdown',
    options: [],
    selectedItem: {},
    hideValue: true,
    dynamicPlaceholder: true,
    required: true,
    requiredText: '*',
    placeholderText: 'Class',
    isError: false,
    errorMessage: 'Please select class',
    flightIntl: true,
  },
  noOfTravellers: {
    componentType: 'numberInput',
    value: 1,
    placeholder: 'Guest count',
    required: true,
    dynamicPlaceholder: true,
    requiredText: '*',
    errorMessage: 'Please enter guest count',
    isError: false,
    flightIntl: true,
  },
  origin: {
    componentType: 'autoSuggest-citySearch',
    inputProps: {
      placeholder: 'Departure city or airport',
      dynamicPlaceholder: true,
      required: true,
      errorMessage: 'Please enter departure city or airport',
      id: 'origin',
      requiredText: '*',
      isError: false,
    },
    selectedItem: {},
    options: [],
    itemTextKey: 'text',
    itemValueKey: 'value',
    key: 'origin',
    flightIntl: true,
  },
  destination: {
    componentType: 'autoSuggest-citySearch',
    inputProps: {
      placeholder: 'Arrival city or airport',
      dynamicPlaceholder: true,
      required: true,
      errorMessage: 'Please enter arrival city or airport',
      id: 'destination',
      requiredText: '*',
      isError: false,
    },
    selectedItem: {},
    options: [],
    itemTextKey: 'text',
    itemValueKey: 'value',
    key: 'destination',
    flightIntl: true,
  },
  depDate: {
    componentType: 'dateSelection',
    id: 'depDate',
    name: 'depDate',
    value: '',
    isError: false,
    requiredText: '*',
    required: true,
    errorMessage: 'Please select departure date',
    dynamicPlaceholder: true,
    placeholder: 'Departure date',
    flightIntl: true,
  },
  arrivalDate: {
    componentType: 'dateSelection',
    id: 'arrivalDate',
    name: 'arrivalDate',
    value: '',
    isError: false,
    requiredText: '*',
    required: true,
    errorMessage: 'Please select return date',
    dynamicPlaceholder: true,
    placeholder: 'Arrival date',
    flightIntl: true,
  },
};

export const FLIGHT_DETAILS = {
  subTripId: {
    key: 'subTripID',
    componentType: 'dropdown',
    options: [{}],
    selectedItem: {},
    hideValue: true,
    dynamicPlaceholder: true,
    required: false,
    requiredText: '*',
    placeholderText: 'Select sub-trip ID',
    isError: false,
    errorMessage: 'Please enter sub-trip ID',
    disabled: true,
    id: 'subTripId',
    selectKey: 'value',
    textKey: 'text',
  },
  ticketingSource: {
    componentType: 'dropdown',
    options: [],
    selectedItem: {},
    hideValue: true,
    dynamicPlaceholder: true,
    required: true,
    requiredText: '*',
    placeholderText: 'Ticketing sources',
    isError: false,
    errorMessage: 'Please select ticketing sources',
  },
  airline: {
    componentType: 'dropdown',
    options: [],
    selectedItem: {},
    hideValue: true,
    dynamicPlaceholder: true,
    required: true,
    requiredText: '*',
    placeholderText: 'Airline',
    isError: false,
    errorMessage: 'Please select airline',
  },
  flightNumber: {
    componentType: 'input',
    value: '',
    placeholder: 'Flight number',
    required: true,
    dynamicPlaceholder: true,
    requiredText: '*',
    errorMessage: 'Please enter flight number',
    isError: false,
  },
  class: {
    componentType: 'dropdown',
    options: [],
    selectedItem: {},
    hideValue: true,
    dynamicPlaceholder: true,
    required: true,
    requiredText: '*',
    placeholderText: 'Class',
    isError: false,
    errorMessage: 'Please select class',
  },
  pnr: {
    componentType: 'input',
    value: '',
    placeholder: 'PNR number',
    required: true,
    dynamicPlaceholder: true,
    requiredText: '*',
    errorMessage: 'Please enter PNR number',
    isError: false,
  },
  depDateTime: {
    componentType: 'timePickerInput',
    value: '',
    isError: false,
    errorMessage: 'Please select valid departure time ',
    showTimeSelect: true,
    timeIntervals: 5,
    dynamicPlaceholder: true,
    placeholder: 'Departure time',
    mainClassName: 'react-time-picker-wrapper input-field',
    className: ' time-picker input-field',
    requiredText: '*',
    required: true,
  },
  arrDateTime: {
    componentType: 'timePickerInput',
    value: '',
    isError: false,
    errorMessage: 'Please select valid arrival time ',
    showTimeSelect: true,
    dynamicPlaceholder: true,
    timeIntervals: 5,
    placeholder: 'Arrival time',
    mainClassName: 'react-time-picker-wrapper input-field',
    className: ' time-picker input-field',
    requiredText: '*',
    required: true,
  },
  depTerminal: {
    componentType: 'dropdown',
    options: [],
    selectedItem: {},
    hideValue: true,
    dynamicPlaceholder: true,
    required: true,
    requiredText: '*',
    placeholderText: 'Departure terminal',
    isError: false,
    errorMessage: 'Please select departure terminal',
  },
  arrTerminal: {
    componentType: 'dropdown',
    options: [],
    selectedItem: {},
    hideValue: true,
    dynamicPlaceholder: true,
    required: true,
    requiredText: '*',
    placeholderText: 'Arrival terminal',
    isError: false,
    errorMessage: 'Please select arrival terminal',
  },
};

export const FLIGHT_DETAILS_INTL = {
  airline: {
    componentType: 'dropdown',
    options: [],
    selectedItem: {},
    hideValue: true,
    dynamicPlaceholder: true,
    required: true,
    requiredText: '*',
    placeholderText: 'Airline',
    isError: false,
    errorMessage: 'Please select airline',
  },
  flightNumber: {
    componentType: 'input',
    value: '',
    placeholder: 'Flight number',
    required: true,
    dynamicPlaceholder: true,
    requiredText: '*',
    errorMessage: 'Please enter flight number',
    isError: false,
  },
  depDateTime: {
    componentType: 'timePickerInput',
    value: '',
    isError: false,
    errorMessage: 'Please select valid departure time ',
    showTimeSelect: true,
    timeIntervals: 5,
    dynamicPlaceholder: true,
    placeholder: 'Departure time',
    mainClassName: 'react-time-picker-wrapper input-field',
    className: ' time-picker input-field',
    requiredText: '*',
    required: true,
    flightIntl: true,
  },
  arrDateTime: {
    componentType: 'timePickerInput',
    value: '',
    isError: false,
    errorMessage: 'Please select valid arrival time ',
    showTimeSelect: true,
    dynamicPlaceholder: true,
    timeIntervals: 5,
    placeholder: 'Arrival time',
    mainClassName: 'react-time-picker-wrapper input-field',
    className: ' time-picker input-field',
    requiredText: '*',
    required: true,
    flightIntl: true,
  },
  depTerminal: {
    componentType: 'dropdown',
    options: [],
    selectedItem: {},
    hideValue: true,
    dynamicPlaceholder: true,
    required: true,
    requiredText: '*',
    placeholderText: 'Departure terminal',
    isError: false,
    errorMessage: 'Please select departure terminal',
  },
  arrTerminal: {
    componentType: 'dropdown',
    options: [],
    selectedItem: {},
    hideValue: true,
    dynamicPlaceholder: true,
    required: true,
    requiredText: '*',
    placeholderText: 'Arrival terminal',
    isError: false,
    errorMessage: 'Please select arrival terminal',
  },
};

export const STOP_DETAILS = {
  stop: {
    componentType: 'dropdown',
    options: [],
    selectedItem: {},
    hideValue: true,
    dynamicPlaceholder: true,
    required: true,
    requiredText: '*',
    placeholderText: 'Stop',
    isError: false,
    errorMessage: 'Please select Stop',
  },
  stopInfo: [],
};

export const BAGGAGE_DETAILS = {
  cabin: {
    componentType: 'input',
    value: '',
    type: 'number',
    placeholder: 'Cabin',
    dynamicPlaceholder: true,
    isError: false,
    required: true,
    requiredText: '*',
    errorMessage: 'Please enter cabin upto 100kg',
    maxLength: 3,
  },
  checkIn: {
    componentType: 'input',
    value: '',
    type: 'number',
    placeholder: 'Check in',
    dynamicPlaceholder: true,
    isError: false,
    required: true,
    requiredText: '*',
    errorMessage: 'Please enter check in upto 100kg',
    maxLength: 3,
  },
};

export const PASSENGER_DETAILS = {
  ssrDetails: [],
  corporateUserType: {},
  guestType: {
    value: 'EMPLOYEE',
    isError: false,
    disabled: false,
    isHidden: false,
    componentType: 'dropdown',
    options: [],
    hideValue: true,
    dynamicPlaceholder: true,
    required: true,
    requiredText: '*',
    placeholderText: 'Guest type',
    textKey: 'text',
    selectedItem: { text: 'Employee', value: 'EMPLOYEE' },
    errorMessage: 'Please select guest type',
  },
  title: {
    value: 'Mr',
    isError: false,
    disabled: false,
    componentType: 'dropdown',
    options: [],
    hideValue: true,
    dynamicPlaceholder: true,
    required: true,
    requiredText: '*',
    placeholderText: 'Title',
    errorMessage: 'Please select title',
    selectedItem: { text: 'Mr', value: 'Mr' },
  },

  firstName: {
    value: '',
    placeholder: 'First name',
    required: true,
    dynamicPlaceholder: true,
    requiredText: '*',
    className: 'input-field',
    isError: false,
    errorMessage: 'Please enter first name',
  },
  middleName: {
    value: '',
    placeholder: 'Middle name (optional)',
    required: false,
    dynamicPlaceholder: true,
    className: 'input-field',
    isError: false,
    errorMessage: 'Please enter middle name',
  },
  lastName: {
    value: '',
    placeholder: 'Last name',
    required: true,
    dynamicPlaceholder: true,
    requiredText: '*',
    className: 'input-field',
    isError: false,
    errorMessage: 'Please enter last name',
  },
  gender: {
    componentType: 'dropdown',
    options: [],
    selectedItem: { text: 'Male', value: 'M' },
    hideValue: true,
    dynamicPlaceholder: true,
    required: true,
    requiredText: '*',
    placeholderText: 'Gender',
    isError: false,
    errorMessage: 'Please select gender',
  },
  dateOfBirth: {
    value: '',
    componentType: 'date',
    dynamicPlaceholder: true,
    className: 'input-field',
    placeholder: 'Date of birth',
    errorMessage: 'Please enter date of birth',
  },
  contactNo: {
    value: '',
    placeholder: 'Mobile number',
    required: true,
    dynamicPlaceholder: true,
    requiredText: '*',
    className: 'contactNo',
    isError: false,
    errorMessage: 'Please enter mobile number',
    type: 'number',
    maxLength: 12,
    options: [],
    dropDownKey: 'contactCode',
    selectedItem: {},
    codeComponentType: 'dropdown',
  },
  email: {
    value: '',
    placeholder: 'Email',
    required: true,
    dynamicPlaceholder: true,
    requiredText: '*',
    className: 'input-field',
    isError: false,
    errorMessage: 'Please enter valid email',
  },
  nationality: {
    isError: false,
    selectedItem: {},
    componentType: 'dropdown',
    options: [],
    hideValue: true,
    dynamicPlaceholder: true,
    placeholderText: 'Nationality',
    errorMessage: 'Please select nationality',
  },
  passportNumber: {
    value: '',
    placeholder: 'Passport number',
    required: true,
    requiredText: '*',
    dynamicPlaceholder: true,
    className: 'input-field',
    isError: false,
    errorMessage: 'Please enter passport number',
  },
  passportExpiryDate: {
    value: '',
    componentType: 'date',
    required: true,
    requiredText: '*',
    isError: false,
    dynamicPlaceholder: true,
    className: 'input-field',
    placeholder: 'Passport expiry date',
    errorMessage: 'Please enter passport expiry date',
  },
  ticketNumber: {
    value: '',
    placeholder: 'Ticket/PNR number',
    required: true,
    dynamicPlaceholder: true,
    requiredText: '*',
    className: 'input-field',
    isError: false,
    errorMessage: 'Please enter ticket number',
  },
  paxId: null,
};

export const PAYMENT_DETAILS = {
  paymentMode: {
    componentType: 'dropdown',
    options: [],
    selectedItem: {},
    hideValue: true,
    dynamicPlaceholder: true,
    required: true,
    requiredText: '*',
    placeholderText: 'Payment mode',
    isError: false,
    errorMessage: 'Please enter payment mode',
  },
  paymentOption: {
    componentType: 'dropdown',
    options: [],
    selectedItem: {},
    hideValue: true,
    dynamicPlaceholder: true,
    required: true,
    requiredText: '*',
    placeholderText: 'Payment option',
    isError: false,
    errorMessage: 'Please enter payment option',
  },
  transactionId: {
    componentType: 'input',
    value: '',
    id: 'transactionId',
    placeholder: 'Merchant transaction id',
    dynamicPlaceholder: true,
    isError: false,
    required: true,
    requiredText: '*',
    errorMessage: 'Please enter Merchant transaction id',
  },
};
export const PRICE_BREAKUP = {
  base: {
    componentType: 'priceBreakup',
    value: '',
    placeholder: 'Base fare',
    required: true,
    isError: false,
    errorMessage: 'Please enter valid base fare',
    dynamicPlaceholder: true,
    requiredText: '*',
    className: 'input-field',
    type: 'number',
  },
  taxesAndFees: {
    componentType: 'priceBreakup',
    value: '',
    placeholder: 'Fee & Surcharges',
    isError: false,
    errorMessage: 'Please enter valid fee & surcharges',
    required: true,
    dynamicPlaceholder: true,
    requiredText: '*',
    className: 'input-field',
    type: 'number',
  },
  convenienceFeeWithGst: {
    componentType: 'priceBreakup',
    value: '',
    placeholder: 'Convenience fee (Incl GST)',
    isError: false,
    errorMessage: 'Please enter valid convenience fee (incl GST)',
    required: true,
    dynamicPlaceholder: true,
    requiredText: '*',
    className: 'input-field',
    type: 'number',
  },
  seatCharges: {
    componentType: 'priceBreakup',
    value: '',
    placeholder: 'Seat charges',
    isError: false,
    errorMessage: 'Please enter seat charges',
    required: false,
    dynamicPlaceholder: true,
    className: 'input-field',
    type: 'number',
  },
  mealCharges: {
    componentType: 'priceBreakup',
    value: '',
    placeholder: 'Meal charges',
    isError: false,
    errorMessage: 'Please enter meal charges',
    required: false,
    dynamicPlaceholder: true,
    className: 'input-field',
    type: 'number',
  },
  baggageCharges: {
    componentType: 'priceBreakup',
    value: '',
    placeholder: 'Baggage charges',
    isError: false,
    errorMessage: 'Please enter baggage charges',
    required: false,
    dynamicPlaceholder: true,
    className: 'input-field',
    type: 'number',
  },
  total: {
    componentType: 'priceBreakup',
    value: '',
    placeholder: 'Total amount',
    isError: false,
    required: true,
    dynamicPlaceholder: true,
    requiredText: '*',
    className: 'input-field total-amount',
    type: 'number',
    disabled: true,
  },
};

export const MODIFICATION_PRICE_BREAKUP = {
  fareDifference: {
    componentType: 'priceBreakup',
    value: '',
    placeholder: 'Fare Difference',
    required: true,
    dynamicPlaceholder: true,
    className: 'input-field',
    type: 'number',
    requiredText: '*',
    isError: false,
    errorMessage: 'Please enter fare difference',
  },
  reissueCharges: {
    componentType: 'priceBreakup',
    value: '',
    placeholder: 'Modification charges',
    required: true,
    isError: false,
    dynamicPlaceholder: true,
    requiredText: '*',
    className: 'input-field',
    type: 'number',
    errorMessage: 'Please enter valid modification charges',
  },
  convenienceFeeWithGst: {
    componentType: 'priceBreakup',
    value: '',
    placeholder: 'Modification convenience fee (Incl GST)',
    isError: false,
    required: true,
    dynamicPlaceholder: true,
    requiredText: '*',
    className: 'input-field',
    type: 'number',
    errorMessage: 'Please enter valid convenience fee',
  },
  seatCharges: {
    componentType: 'priceBreakup',
    value: '',
    placeholder: 'Seat charges',
    isError: false,
    errorMessage: 'Please enter seat charges',
    required: false,
    dynamicPlaceholder: true,
    className: 'input-field',
    type: 'number',
  },
  mealCharges: {
    componentType: 'priceBreakup',
    value: '',
    placeholder: 'Meal charges',
    isError: false,
    errorMessage: 'Please enter meal charges',
    required: false,
    dynamicPlaceholder: true,
    className: 'input-field',
    type: 'number',
  },
  baggageCharges: {
    componentType: 'priceBreakup',
    value: '',
    placeholder: 'Baggage charges',
    isError: false,
    errorMessage: 'Please enter baggage charges',
    required: false,
    dynamicPlaceholder: true,
    className: 'input-field',
    type: 'number',
  },
  total: {
    componentType: 'priceBreakup',
    value: '',
    placeholder: 'Total amount after modification',
    errorMessage: 'Please enter total amount after modification',
    isError: false,
    required: true,
    dynamicPlaceholder: true,
    requiredText: '*',
    className: 'input-field total-modification',
    type: 'number',
  },
  payableAmount: {
    componentType: 'priceBreakup',
    value: '',
    placeholder: 'Amount payable',
    isError: false,
    required: true,
    dynamicPlaceholder: true,
    requiredText: '*',
    className: 'input-field',
    type: 'number',
    errorMessage: 'Please enter payable amount',
  },
};

export const CANCELLATION_PRICE_BREAKUP = {
  cancellationCharge: {
    componentType: 'priceBreakup',
    value: '',
    placeholder: 'Cancellation charges',
    required: true,
    isError: false,
    dynamicPlaceholder: true,
    requiredText: '*',
    className: 'input-field',
    type: 'number',
    errorMessage: 'Please enter valid cancellation charges',
  },
  convenienceFeeWithGst: {
    componentType: 'priceBreakup',
    value: '',
    placeholder: 'Cancellation convenience fee (Incl GST)',
    isError: false,
    required: true,
    dynamicPlaceholder: true,
    requiredText: '*',
    className: 'input-field',
    type: 'number',
    errorMessage: 'Please enter valid convenience fee',
  },
  cancellationRefund: {
    componentType: 'priceBreakup',
    value: '',
    placeholder: 'Refund amount',
    isError: false,
    required: true,
    dynamicPlaceholder: true,
    requiredText: '*',
    className: 'input-field total-cancellation',
    type: 'number',
    disabled: true,
  },
};

export const INITIAL_PREFETCH = {
  airlines: [],
  stops: [],
  cabinClasses: [],
  paymentModes: [],
  paymentOptions: [],
  genders: [],
  ticketingSources: [],
  terminals: [],
  isdCodes: [],
  journeyTypes: [],
  guestTypes: [],
  seatTypes: [],
  guestType: [],
};
